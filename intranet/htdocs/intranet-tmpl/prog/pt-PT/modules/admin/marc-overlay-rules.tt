[% USE raw %]
[% USE To %]
[% USE Asset %]
[% SET footerjs = 1 %]
[% USE Koha %]
[% USE KohaSpan %]
[% PROCESS 'i18n.inc' %]
[% INCLUDE 'doc-head-open.inc' %]
<title>Regras MARC de sobreposição &rsaquo; Koha &rsaquo; Administração</title>
[% INCLUDE 'doc-head-close.inc' %]

<style>
    .required {
        background-color: #C00;
    }
</style>

</head>
<body id="admin_marc-overlay-rules" class="admin">
[% WRAPPER 'header.inc' %]
 [% INCLUDE 'cat-search.inc' %]
[% END %]

[% WRAPPER 'sub-header.inc' %]
 [% WRAPPER breadcrumbs %]
 [% WRAPPER breadcrumb_item %]
 <a href="/cgi-bin/koha/admin/admin-home.pl">Administração</a>
 [% END %]
 [% WRAPPER breadcrumb_item %]
 <a href="#" aria-current="page">
 <span>Regras MARC de sobreposição</span>
 </a>
 [% END %]
 [% END #/ WRAPPER breadcrumbs %]
[% END #/ WRAPPER sub-header.inc %]

 <div class="main container-fluid">
 <div class="row">
 <div class="col-sm-10 col-sm-push-2">

 <h1>Gerir as regras MARC de sobreposição</h1>

 [% FOR m IN messages %]
 <div class="dialog [% m.type | html %]">
 [% SWITCH m.code %]
 [% CASE 'invalid_tag_regexp' %]
 <span>Expressão regular inválida "[% m.tag | html %]".</span>
 [% CASE 'invalid_control_field_actions' %]
 <span>Combinação inválida de ações para a etiqueta [% m.tag | html %]. As regras de campos de controlo não permitem as ações "Acrescentado: Acrescentar" e "Removido: Ignorar".</span>
 [% CASE %]
 <span>[% m.code | html %]</span>
 [% END %]
 </div>
 [% END %] [% UNLESS Koha.Preference( 'MARCOverlayRules' ) %] [% SET pref_MARCOverlayRules_link = '<a href="/cgi-bin/koha/admin/preferences.pl?op=search&searchfield=MARCOverlayRules">MARCOverlayRules</a>' %]
 <div class="dialog message">
 A preferência [%  pref_MARCOverlayRules_link | $raw | $KohaSpan %] não está definida, não se esqueça de a ativar para as regras terem efeito. </div>
 [% END %]
 [% IF removeConfirm %]
 <div class="dialog alert">
 <h3>Remover regra?</h3>
 <p>Tem a certeza que pretende eliminar a(s) regra(s) selecionada(s)?</p>

 <form action="/cgi-bin/koha/admin/marc-overlay-rules.pl" method="GET">
 <button type="submit" class="deny"><i class="fa fa-fw fa-remove"></i> Não, não eliminar</button>
 </form>
 <button type="button" class="approve" id="doremove"><i class="fa fa-fw fa-check"></i> Sim, remover</button>
 </div>
 [% END %]

 <div class="page-section">
 <form action="/cgi-bin/koha/admin/marc-overlay-rules.pl" method="POST" id="marc-overlay-rules-form">
 <table id="marc-overlay-rules">
 <thead><tr>
 <th>Regra</th>
 <th>Módulo</th>
 <th>[% tp('noun', 'Filter') | html %]</th>
 <th>Campo</th>
 <th>Predefinir</th>
 <th>Adicionado <i class="fa fa-info-circle" data-placement="right" data-toggle="tooltip" id="info_added" title="Se um campo que corresponde à regra apenas existir no registo a inserir"></i></th>
 <th>Adicionado <i class="fa fa-info-circle" data-placement="right" data-toggle="tooltip" id="info_appended" title="Se o registo original tem um ou mais campos que correspondem à regra, mas um ou mais desses campos diferem no novo registo"></i></th>
 <th>Removido <i class="fa fa-info-circle" data-placement="right" data-toggle="tooltip" id="info_removed" title="Se o registo original tem um campo que corresponde à regra, mas esse campo não existe no novo registo"></i></th>
 <th>Apagado <i class="fa fa-info-circle" data-placement="right" data-toggle="tooltip" id="info_deleted" title="Se o registo original tem campos que correspondem à regra, mas esses campos não existem no novo registo"></i></th>
 <th>Ações</th>
 <th>&nbsp;</th>
 </tr></thead>
 [% UNLESS edit %]
 <tfoot>
 <tr class="rule-new">
 <th>&nbsp;</th>
 <th>
 <select name="module">
 <option value="source">Fonte</option>
 <option value="categorycode">Categoria de leitor</option>
 <option value="userid">Nome do utilizador</option>
 </select>
 </th>
 <th id="filter-container"></th>
 <th><input type="text" size="5" name="tag"/></th>
 <th>
 <select name="preset">
 <option value="" selected>Personalizado</option>
 <option value="Protect">Proteger</option>
 <option value="Overwrite">Sobrepor</option>
 <option value="Add new">Novo</option>
 <option value="Add and append">Adicionar e juntar</option>
 <option value="Protect from deletion">Proteger da eliminação</option>
 </select>
 </th>
 <th class="rule-operation-action-edit">
 <select name="add">
 <option value="0">Ignorar</option>
 <option value="1">Adicionar</option>
 </select>
 </th>
 <th class="rule-operation-action-edit">
 <select name="append">
 <option value="0">Ignorar</option>
 <option value="1">Juntar</option>
 </select>
 </th>
 <th class="rule-operation-action-edit">
 <select name="remove">
 <option value="0">Ignorar</option>
 <option value="1">Remover</option>
 </select>
 </th>
 <th class="rule-operation-action-edit">
 <select name="delete">
 <option value="0">Ignorar</option>
 <option value="1">Apagar</option>
 </select>
 </th>
 <th><button class="btn btn-default btn-xs" id="add" title="Adicionar"><i class="fa fa-plus"></i> Adicionar regra</button></th>
 <th><button class="btn btn-default btn-xs" disabled="disabled" id="btn_batchremove" title="Remover em lote"><i class="fa fa-trash"></i> Eliminar selecção</button></th>
 </tr>
 </tfoot>
 [% END %]
 <tbody>
 [% FOREACH rule IN rules %]
 <tr id="[% rule.id | html %]" class="rule[% IF rule.edit %]-edit[% END %]">
 [% IF rule.edit %]
 <td>[% rule.id | html %]</td>
 <td>
 <select name="module">
 [% IF rule.module == "source" %]
 <option value="source" selected="selected">Fonte</option>
 [% ELSE %]
 <option value="source">Fonte</option>
 [% END %]
 [% IF rule.module == "categorycode" %]
 <option value="categorycode" selected="selected">Categoria de leitor</option>
 [% ELSE %]
 <option value="categorycode">Categoria de leitor</option>
 [% END %]
 [% IF rule.module == "userid" %]
 <option value="userid" selected="selected">Nome do utilizador</option>
 [% ELSE %]
 <option value="userid">Nome do utilizador</option>
 [% END %]
 </select>
 </td>
 <td id="filter-container" data-filter="[% rule.filter | html %]"></td>
 <td><input type="text" size="3" name="tag" value="[% rule.tag | html %]"/></td>
 <th>
 <select name="preset">
 <option value="" selected>Personalizado</option>
 <option value="Protect">Proteger</option>
 <option value="Overwrite">Sobrepor</option>
 <option value="Add new">Novo</option>
 <option value="Add and append">Adicionar e juntar</option>
 <option value="Protect from deletion">Proteger da eliminação</option>
 </select>
 </th>
 <td class="rule-operation-action-edit">
 <select name="add">
 [% IF rule.add %]
 <option value="0">Ignorar</option>
 <option value="1" selected="selected">Adicionar</option>
 [% ELSE %]
 <option value="0" selected="selected">Ignorar</option>
 <option value="1">Adicionar</option>
 [% END %]
 </select>
 </td>
 <td class="rule-operation-action-edit">
 <select name="append">
 [% IF rule.append %]
 <option value="0">Ignorar</option>
 <option value="1" selected="selected">Juntar</option>
 [% ELSE %]
 <option value="0" selected="selected">Ignorar</option>
 <option value="1">Juntar</option>
 [% END %]
 </select>
 </td>
 <td class="rule-operation-action-edit">
 <select name="remove">
 [% IF rule.remove %]
 <option value="0">Ignorar</option>
 <option value="1" selected="selected">Remover</option>
 [% ELSE %]
 <option value="0" selected="selected">Ignorar</option>
 <option value="1">Remover</option>
 [% END %]
 </select>
 </td>
 <td class="rule-operation-action-edit">
 <select name="delete">
 [% IF rule.delete %]
 <option value="0">Ignorar</option>
 <option value="1" selected="selected">Apagar</option>
 [% ELSE %]
 <option value="0" selected="selected">Ignorar</option>
 <option value="1">Apagar</option>
 [% END %]
 </select>
 </td>
 <td class="actions">
 <button class="btn btn-default btn-xs" id="doedit" title="Guardar" value="[% rule.id | html %]"><i class="fa fa-check"></i> Guardar</button>
 <button class="btn btn-default btn-xs" title="Anular" type="submit"><i class="fa fa-times"></i> Anular</button>
 </td>
 <td></td>
 [% ELSE %]
 <td>[% rule.id | html %]</td>
 <td class="rule-module">[% rule.module | html %]</td>
 <td class="rule-filter">[% rule.filter | html %]</td>
 <td>[% rule.tag | html %]</td>
 <td class="rule-preset"></td>
 <td class="rule-operation-action" data-operation="add">[% IF rule.add %]Adicionar[% ELSE %]Ignorar[% END %]</td>
 <td class="rule-operation-action" data-operation="append">[% IF rule.append %]Juntar[% ELSE %]Ignorar[% END %]</td>
 <td class="rule-operation-action" data-operation="remove">[% IF rule.remove %]Remover[% ELSE %]Ignorar[% END %]</td>
 <td class="rule-operation-action" data-operation="delete">[% IF rule.delete %]Eliminar[% ELSE %]Ignorar[% END %]</td>
 <td class="actions">
 <a class="btn btn-default btn-xs" href="?op=remove&id=[% rule.id | uri %]" title="Apagar"><i class="fa fa-trash"></i> Apagar</a>
 <a class="btn btn-default btn-xs" href="?op=edit&id=[% rule.id | uri %]" title="Alterar"><i class="fa fa-pencil"></i> Alterar</a>
 </td>
 <td>
 [% IF rule.removemarked %]
 <input type="checkbox" name="batchremove" value="[% rule.id | html %]" checked="checked"/>
 [% ELSE %]
 <input type="checkbox" name="batchremove" value="[% rule.id | html %]"/>
 [% END %]
 </td>
 [% END %]
 </tr>
 [% END %]
 </tbody>
 </table>
 </form>
 </div> <!-- /.page-section -->

 <form action="/cgi-bin/koha/admin/marc-overlay-rules.pl" method="post">
 <input type="hidden" name="op" value="redo-matching" />
 </form>

 </div><!-- /.col-sm-10.col-sm-push-2 -->

 <div class="col-sm-2 col-sm-pull-10">
 <aside>
 [% INCLUDE 'admin-menu.inc' %]
 </aside>
 </div>

 </div><!-- /.row -->
 </div><!-- /main container-fluid -->

[% MACRO jsinclude BLOCK %]
 [% Asset.js("js/admin-menu.js") | $raw %]
 [% INCLUDE 'datatables.inc' %]

 <script>
    $(document).ready(function(){
        function doSubmit(op, id) {
            $('<input type="hidden"/>')
            .attr('name', 'op')
            .attr('value', op)
            .appendTo('#marc-overlay-rules-form');

            if(id) {
                $('<input type="hidden"/>')
                .attr('name', 'id')
                .attr('value', id)
                .appendTo('#marc-overlay-rules-form');
            }

            var valid = true;
            if (op == 'add' || op == 'edit') {
                var validate = [
                    $('#marc-overlay-rules-form input[name="filter"]'),
                    $('#marc-overlay-rules-form input[name="tag"]')
                ];
                for(var i = 0; i < validate.length; i++) {
                    if (validate[i].length) {
                        if(validate[i].val().length == 0) {
                            validate[i].addClass('required');
                            valid = false;
                        } else {
                            validate[i].removeClass('required');
                        }
                    }
                }
            }

            if (valid) {
                $('#marc-overlay-rules-form').submit();
            }

            return valid;
        }

        $('#doremove').on('click', function(){
            doSubmit('doremove');
        });
        $('#doedit').on('click', function(){
            doSubmit('doedit', $("#doedit").attr('value'));
        });
        $('#add').on('click', function(){
            doSubmit('add');
            return false;
        });
        $('#btn_batchremove').on('click', function(){
            doSubmit('remove');
        });

        /* Disable batch remove unless one or more checkboxes are checked */
        $('input[name="batchremove"]').change(function() {
            if($('input[name="batchremove"]:checked').length > 0) {
                $('#btn_batchremove').removeAttr('disabled');
            } else {
                $('#btn_batchremove').attr('disabled', 'disabled');
            }
        });

        $.fn.dataTable.ext.order['dom-input'] = function (settings, col) {
            return this.api().column(col, { order: 'index' }).nodes()
                .map(function (td, i) {
                    if($('input', td).val() != undefined) {
                        return $('input', td).val();
                    } else if($('select', td).val() != undefined) {
                        return $('option[selected="selected"]', td).val();
                    } else {
                        return $(td).html();
                    }
                });
        }

        $('#marc-overlay-rules').dataTable($.extend(true, {}, dataTablesDefaults, {
            "aoColumns": [
                {"bSearchable": false, "bSortable": false},
                {"sSortDataType": "dom-input"},
                {"sSortDataType": "dom-input"},
                {"bSearchable": false, "sSortDataType": "dom-input"},
                {"bSearchable": false, "sSortDataType": "dom-input"},
                {"bSearchable": false, "sSortDataType": "dom-input"},
                {"bSearchable": false, "sSortDataType": "dom-input"},
                {"bSearchable": false, "sSortDataType": "dom-input"},
                {"bSearchable": false, "sSortDataType": "dom-input"},
                {"bSearchable": false, "bSortable": false},
                {"bSearchable": false, "bSortable": false}
            ],
            "pagingType": "simple"
        }));

        var overlay_rules_presets = {};
        overlay_rules_presets[_("Proteger")] = {
          'add': 0,
          'append': 0,
          'remove': 0,
          'delete': 0
        };
        overlay_rules_presets[_("Sobrepor")] = {
          'add': 1,
          'append': 1,
          'remove': 1,
          'delete': 1
        };
        overlay_rules_presets[_("Novo")] = {
          'add': 1,
          'append': 0,
          'remove': 0,
          'delete': 0
        };
        overlay_rules_presets[_("Adicionar e juntar")] = {
          'add': 1,
          'append': 1,
          'remove': 0,
          'delete': 0
        };
        overlay_rules_presets[_("Proteger da eliminação")] = {
          'add': 1,
          'append': 1,
          'remove': 1,
          'delete': 0
        };

        var overlay_rules_label_to_value = {};
        overlay_rules_label_to_value[_("Adicionar")] = 1;
        overlay_rules_label_to_value[_("Juntar")] = 1;
        overlay_rules_label_to_value[_("Remover")] = 1;
        overlay_rules_label_to_value[_("Apagar")] = 1;
        overlay_rules_label_to_value[_("Ignorar")] = 0;

        function hash_config(config) {
          return JSON.stringify(config, Object.keys(config).sort());
        }

        var overlay_rules_preset_map = {};
        $.each(overlay_rules_presets, function(preset, config) {
          overlay_rules_preset_map[hash_config(config)] = preset;
        });

        function operations_config_overlay_rule_preset(config) {
          return overlay_rules_preset_map[hash_config(config)] || '';
        }

        /* Set preset values according to operation config */
        $('.rule').each(function() {
          var $this = $(this);
          var operations_config = {};
          $('.rule-operation-action', $this).each(function() {
            var $operation = $(this);
            operations_config[$operation.data('operation')] = overlay_rules_label_to_value[$operation.text()];
          });
          $('.rule-preset', $this).text(
            operations_config_overlay_rule_preset(operations_config) || _("Personalizado")
          );
        });

        /* Listen to operations config changes and set presets accordingly */
        $('.rule-operation-action-edit select').change(function() {
          var operations_config = {};
          var $parent_row = $(this).closest('tr');
          $('.rule-operation-action-edit select', $parent_row).each(function() {
            var $this = $(this);
            operations_config[$this.attr('name')] = parseInt($this.val());
          });
          $('select[name="preset"]', $parent_row).val(
              operations_config_overlay_rule_preset(operations_config)
          );
        });

        /* Listen to preset changes and set operations config accordingly */
        $('select[name="preset"]').change(function() {
          var $this = $(this);
          var $parent_row = $this.closest('tr');
          var preset = $this.val();
          if (preset) {
            $.each(overlay_rules_presets[preset], function(operation, action) {
              $('select[name="' + operation + '"]', $parent_row).val(action);
            });
          }
        });

        var categories = [% To.json( categories ) | $raw %];
        // Add * => * to this array of objects, and *reduce* it to one object
        // Note: This allows displaying a sorted list of categories later, but we still depend on an object!
        categories.unshift({ categorycode: '*', description: '*'});
        categories = categories.reduce( ( a,c ) => ( { ...a, [c.categorycode]: c.description } ), {} );

        var module_filter_options = {
        source: {
            '*': '*',
            batchmod: _("Modificar registos em lote"),
            intranet: _("Editor MARC do interface dos técnicos"),
            batchimport: _("Importação para tratamento MARC"),
            z3950: _("Z39.50"),
            /* bulkmarcimport: _("bulkmarcimport.pl"), */
            import_lexile: _("import_lexile.pl")
        },

            categorycode: categories,
        };

        //Kind of hack: Replace filter value with label when one exist
        $('.rule-module').each(function() {
          var $this = $(this);
          var module = $this.text();
          if (module in module_filter_options) {
            let $filter = $this.siblings('.rule-filter');
            if ($filter.text() in module_filter_options[module]) {
              $filter.text(module_filter_options[module][$filter.text()]);
            }
          }
        });

        var $filter_container = $('#filter-container');

        /* Listen to module changes and set filter input accordingly */
        $('select[name="module"]').change(function() {
          var $this = $(this);
          var module_name = $this.val();

          /* Remove current element if any */
          $filter_container.empty();

          var filter_elem = null;
          if (module_name in module_filter_options) {
            // Create select element
            filter_elem = document.createElement('select');
            for (var filter_value in module_filter_options[module_name]) {
              var option = document.createElement('option');
              option.value = filter_value;
              option.text = module_filter_options[module_name][filter_value];
              filter_elem.appendChild(option);
            }
          }
          else {
            // Create text input element
            filter_elem = document.createElement('input');
            filter_elem.type = 'text';
            filter_elem.setAttribute('size', 5);
          }
          filter_elem.name = 'filter';
          filter_elem.id = 'filter';
          $filter_container.append(filter_elem);
        }).change(); // Trigger change

        // Hack: set value if editing rule
        if ($filter_container.data('filter')) {
          $('#filter').val($filter_container.data('filter'));
        }

    });
    </script>
[% END %]
[% INCLUDE 'intranet-bottom.inc' %]
